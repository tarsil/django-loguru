{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Django Loguru Middleware \u00b6 The extension was based on another one and added some extra flavours. One of the biggest problems with the apps is the logging and that can be messy sometimes. Since this serves as a middleware, it only depends on django (including django rest framework). Table of Contents \u00b6 Requirements Installation Settings Release Notes","title":"Introduction"},{"location":"#django-loguru-middleware","text":"The extension was based on another one and added some extra flavours. One of the biggest problems with the apps is the logging and that can be messy sometimes. Since this serves as a middleware, it only depends on django (including django rest framework).","title":"Django Loguru Middleware"},{"location":"#table-of-contents","text":"Requirements Installation Settings Release Notes","title":"Table of Contents"},{"location":"installation/","text":"Installation \u00b6 pip install django-loguru Add django_loguru to INSTALLED_APPS settings. INSTALLED_APPS = [ ... 'django_loguru' ] Add DJANGO_LOGURU_MIDDLEWARE to your settings. DJANGO_LOGGING_MIDDLEWARE = { 'DEFAULT_FORMAT' : True , 'MESSAGE_FORMAT' : \"<b><green> {time} </green> <cyan> {message} </cyan></b>\" , 'LOG_USER' : False } Add django_loguru.middleware.DjangoLoguruMiddleware as the very last in the list of MIDDLEWARE . The logs should be now activated for every request/response of you application. If you desire to override what is shown on the screen. from django_loguru.middleware import DjangoLoguruMiddleware class MyCustomMiddleware ( DjangoLoguruMiddleware ): def __call__ ( self , request ): \"\"\" Code to be executed on every request/response call. \"\"\" logger . info ( f \"URL: { request . get_raw_uri () } \" ) logger . info ( f \"Method: { request . method } \" ) ... ...","title":"Installation"},{"location":"installation/#installation","text":"pip install django-loguru Add django_loguru to INSTALLED_APPS settings. INSTALLED_APPS = [ ... 'django_loguru' ] Add DJANGO_LOGURU_MIDDLEWARE to your settings. DJANGO_LOGGING_MIDDLEWARE = { 'DEFAULT_FORMAT' : True , 'MESSAGE_FORMAT' : \"<b><green> {time} </green> <cyan> {message} </cyan></b>\" , 'LOG_USER' : False } Add django_loguru.middleware.DjangoLoguruMiddleware as the very last in the list of MIDDLEWARE . The logs should be now activated for every request/response of you application. If you desire to override what is shown on the screen. from django_loguru.middleware import DjangoLoguruMiddleware class MyCustomMiddleware ( DjangoLoguruMiddleware ): def __call__ ( self , request ): \"\"\" Code to be executed on every request/response call. \"\"\" logger . info ( f \"URL: { request . get_raw_uri () } \" ) logger . info ( f \"Method: { request . method } \" ) ... ...","title":"Installation"},{"location":"release-notes/","text":"Release Notes \u00b6 1.0.1 \u00b6 Fixed typo in middleware.py . 1.0.0 \u00b6 Initial release License \u00b6 Copyright (c) 2021-present Tiago Silva and contributors under the MIT license .","title":"Release Notes"},{"location":"release-notes/#release-notes","text":"","title":"Release Notes"},{"location":"release-notes/#101","text":"Fixed typo in middleware.py .","title":"1.0.1"},{"location":"release-notes/#100","text":"Initial release","title":"1.0.0"},{"location":"release-notes/#license","text":"Copyright (c) 2021-present Tiago Silva and contributors under the MIT license .","title":"License"},{"location":"requirements/","text":"Requirements \u00b6 Python >= 3.7 Django >= 3.1","title":"Requirements"},{"location":"requirements/#requirements","text":"Python >= 3.7 Django >= 3.1","title":"Requirements"},{"location":"settings/","text":"Settings \u00b6 DEFAULT_FORMAT - Default True and it will use the default MESSAGE_FORMAT . MESSAGE_FORMAT - Sets the format of the log messages. Defaults to <b><green>{time}</green> <blue>{message}</blue></b> . More information about your options on loguru docs. LOG_POST - Default to False and it won't show POST data. LOG_PUT - Default to False and it won't show PUT data. LOG_PATCH - Default to False and it won't show PATCH data. LOG_DELETE - Default to False and it won't show DELETE data. LOG_USER - Default to True and tells which user did the request/response.","title":"Settings"},{"location":"settings/#settings","text":"DEFAULT_FORMAT - Default True and it will use the default MESSAGE_FORMAT . MESSAGE_FORMAT - Sets the format of the log messages. Defaults to <b><green>{time}</green> <blue>{message}</blue></b> . More information about your options on loguru docs. LOG_POST - Default to False and it won't show POST data. LOG_PUT - Default to False and it won't show PUT data. LOG_PATCH - Default to False and it won't show PATCH data. LOG_DELETE - Default to False and it won't show DELETE data. LOG_USER - Default to True and tells which user did the request/response.","title":"Settings"}]}